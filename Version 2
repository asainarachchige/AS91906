import tkinter as tk
from tkinter import messagebox
import random
import json

OPERATIONS = ["+", "-", "*"]

class LoginMenu(tk.Tk):
    def __init__(self):
        tk.Tk.__init__(self)  # Direct call to the Tk constructor

        self.selection = tk.IntVar()

        self.title("Boxing Math Game")
        self.config(background="grey")
        self.geometry("700x500")  # Removed unnecessary f-string
        self.resizable(False, False)  # Used False instead of 0 for clarity

        # Load user data
        try:
            with open("data.json", 'r') as json_file: 
                self.users = json.load(json_file)
        except:
            self.users = []  # Beginners often use a broad exception

        self.username = tk.StringVar()
        self.password = tk.StringVar()

        # UI setup for login menu
        tk.Label(self, text="Username", font=("Arial", 12), fg="white", bg="Black").place(x=205, y=160)
        tk.Entry(self, width=20, textvariable=self.username, font=("Arial", 13)).place(x=300, y=160)
        tk.Label(self, text="Password", font=("Arial", 12), fg="white", bg="Black").place(x=205, y=220)
        tk.Entry(self, width=20, textvariable=self.password, font=("Arial", 13)).place(x=300, y=220)
        tk.Label(self, text="Boxing maths game", font=("Arial", 25), fg="white", bg="grey").place(x=245, y=100)

        # Radio buttons for login and signup
        tk.Radiobutton(self, text="Login", bg="grey", variable=self.selection, value=1).place(x=310, y=300)
        tk.Radiobutton(self, text="Signup", bg="grey", variable=self.selection, value=2).place(x=310, y=340)

        button_login = tk.Button(self, text="Continue", font=("Arial", 12), command=self.login_signup)
        button_login.place(x=315, y=400)

    def login_signup(self):
        if self.selection.get() not in [1, 2]:
            messagebox.showwarning("Warning", "You must select login or signup.")
        elif not self.username.get().isalpha() or len(self.username.get()) < 5:
            messagebox.showerror("Error", "Username must be only letters and minimum 5 chars.")
        else:
            if len(self.password.get()) < 4 or ' ' in self.password.get():
                messagebox.showerror("Error", "Password must have no spaces and be a minimum of 4 chars.")
            else:
                found = False
                for account in self.users:
                    if account["username"] == self.username.get() and account["password"] == self.password.get():
                        found = True
                        if self.selection.get() == 1:  # Login
                            self.destroy()
                            Menu()  # Go to Menu
                            return
                        else:
                            messagebox.showerror("Error", "User with this account name already exists.")
                            return
                
                if not found:
                    if self.selection.get() == 1:
                        messagebox.showerror("Error", "There is no user with these credentials.")
                    else:
                        self.users.append({"username": self.username.get(), "password": self.password.get()})
                        with open("data.json", "w") as w:
                            json.dump(self.users, w)
                        self.destroy()
                        Menu()
                        return

if __name__ == "__main__":
    app = LoginMenu()
    app.mainloop()
